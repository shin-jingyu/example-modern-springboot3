plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
		sourceCompatibility = JavaVersion.VERSION_21
		targetCompatibility = JavaVersion.VERSION_21
	}
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	configureEach {
		// exclude LOGBACK
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}
repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2' // slf4j가 번들로 포함되어 있음.
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// mapstruct
	implementation 'org.mapstruct:mapstruct:1.6.0.Beta2'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.0.Beta2'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	// flyway
	implementation 'org.flywaydb:flyway-core:9.22.3'

	// DB
	runtimeOnly 'org.postgresql:postgresql'


	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//passoerd encoder
	implementation 'org.springframework.security:spring-security-crypto'
}

tasks.named('test') {
	useJUnitPlatform()
}
